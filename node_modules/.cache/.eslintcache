[{"/home/shivshaurya/Documents/Projects/RealTime-OCR/app/src/index.js":"1","/home/shivshaurya/Documents/Projects/RealTime-OCR/app/src/App.js":"2","/home/shivshaurya/Documents/Projects/RealTime-OCR/app/src/reportWebVitals.js":"3","/home/shivshaurya/Documents/Projects/RealTime-OCR/app/src/Upload.js":"4"},{"size":499,"mtime":1633962843110,"results":"5","hashOfConfig":"6"},{"size":528,"mtime":1633961865378,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1633961865378,"results":"8","hashOfConfig":"6"},{"size":6161,"mtime":1634551145449,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"13giqlf",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/shivshaurya/Documents/Projects/RealTime-OCR/app/src/index.js",[],["20","21"],"/home/shivshaurya/Documents/Projects/RealTime-OCR/app/src/App.js",[],"/home/shivshaurya/Documents/Projects/RealTime-OCR/app/src/reportWebVitals.js",[],"/home/shivshaurya/Documents/Projects/RealTime-OCR/app/src/Upload.js",["22"],"import React, { Component } from 'react';\nimport FileBase64 from 'react-file-base64';\nimport {Button,Form,FormGroup,Label,FormText,Input} from \"reactstrap\"\n\nimport './upload.css';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faInfoCircle } from '@fortawesome/free-solid-svg-icons'; \n\nclass Upload extends Component {\n    constructor(props) {\n        super(props);\n    \n    this.state = {\n        confirmation : \"\",\n        isLoading : \"\",\n        files : \"\",\n        Invoices : \"\",\n        Amount : \"\",\n        InvoiceDate : \"\",\n        Vendor : \"\",\n        Description : \"\"\n      }\n\n    this.handleChane = this.handleChane.bind(this);\n\n    }  \n\n    handleChane(event) {\n        event.preventDefault();\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({name:value});\n    }\n\n    async handleSubmit(event){\n        event.preventDefault();\n        this.setState({confirmation: \"Uploading...\"});\n    }\n\n    async getFiles(files){\n        this.setState({\n            isLoading: \"Extracting data\",\n            files: files\n        });\n\n    const UID = Math.round(1+ Math.random() * (1000000-1));\n    \n    var date={\n        fileExt:\"png\",\n        imageID: UID,\n        folder:UID,\n        img : this.state.files[0].base64\n    };\n\n    this.setState({confirmation: \"Processing...\"})\n    await fetch('https://8jf7ct3ey4.execute-api.us-east-2.amazonaws.com/Production',\n    {\n        method: \"POST\",\n        headers: {\n            Accept : \"application/json\",\n            \"Content-Type\": \"application.json\"\n        },\n        body : JSON.stringify(date)\n    }\n    );\n\n\n    let targetImage = UID + \".png\";\n\n    const response = await fetch(\n        'https://8jf7ct3ey4.execute-api.us-east-2.amazonaws.com/Production/ocr',\n        {\n        method: \"POST\",\n        headers: {\n            Accept : \"application/json\",\n            \"Content-Type\": \"application.json\"\n        },\n        body : JSON.stringify(targetImage)\n        }\n    );\n    this.setState({confirmation: \"\"})\n\n    const OCRBody = await response.json();\n    console.log(\"OCRBody\",OCRBody);\n\n    this.setState({Amount: OCRBody.body[0]})\n    this.setState({Invoice: OCRBody.body[1]})\n    this.setState({InvoiceDate: OCRBody.body[2]})\n\n}\n\n    \n    render() {\n        const processing= this.state.confirmation; \n        return (\n            <div className=\"row\">\n                <div className=\"col-6 offset-3\">\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormGroup>\n                            <h3 className=\"text-danger\">{ processing }</h3>\n                            <h6>Upload Invoice</h6>\n                            <FormText color=\"muted\">PNG,JPG</FormText>\n                        \n\n                        <div className=\"form-group files color\">\n                            <FileBase64 multiple={true}\n                            onDone={this.getFiles.bind(this)}></FileBase64>\n                        </div>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Invoice</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Invoice\"\n                                id=\"Invoice\"\n                                required\n                                value={this.state.Invoice}\n                                onChange = {this.handleChane}\n                                /> \n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Amount ($)</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Amount\"\n                                id=\"Amount\"\n                                required\n                                value={this.state.Amount}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Date</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"InvoiceDate\"\n                                id=\"InvoiceDate\"\n                                required\n                                value={this.state.InvoiceDate}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Vendor</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Vendor\"\n                                id=\"Vendor\"\n                                required\n                                value={this.state.Vendor}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Description</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Description\"\n                                id=\"Description\"\n                                required\n                                value={this.state.Description}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n                        <Button className=\"btn btn-lg btn-block btn-success\">\n                            Submit\n                        </Button>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default Upload;\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":32,"column":15,"nodeType":"29","messageId":"30","endLine":32,"endColumn":19},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]