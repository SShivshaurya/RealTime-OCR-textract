{"ast":null,"code":"var _jsxFileName = \"/home/shivshaurya/Documents/Projects/RealTime-OCR/app/src/Upload.js\";\nimport React, { Component } from 'react';\nimport FileBase64 from 'react-file-base64';\nimport { Button, Form, FormGroup, Label, FormText, Input } from \"reactstrap\";\nimport './upload.css'; // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faInfoCircle } from '@fortawesome/free-solid-svg-icons'; \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Upload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmation: \"\",\n      isLoading: \"\",\n      files: \"\",\n      Invoices: \"\",\n      Amount: \"\",\n      Date: \"\",\n      Vendor: \"\",\n      Description: \"\"\n    };\n  }\n\n  handleChane(event) {\n    event.preventDefault();\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      name: value\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      confirmation: \"Uploading...\"\n    });\n  }\n\n  async getFiles(files) {\n    this.setState({\n      isLoading: \"Extracting data\",\n      files: files\n    });\n    const UID = Math.round(1 + Math.random() * (1000000 - 1));\n    var date = {\n      fileExt: \"png\",\n      imageID: UID,\n      folder: UID,\n      img: this.state.files[0].base64\n    };\n    await fetch('https://8jf7ct3ey4.execute-api.us-east-2.amazonaws.com/Production', {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application.json\"\n      },\n      body: JSON.stringify(date)\n    });\n    let targetImage = UID + \".png\";\n    const response = await fetch('https://8jf7ct3ey4.execute-api.us-east-2.amazonaws.com/Production/ocr', {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application.json\"\n      },\n      body: JSON.stringify(targetImage)\n    });\n    const OCRBody = response.json();\n    console.log(\"OCRBody\", OCRBody);\n    this.setState.Amount = OCRBody.body[0];\n    this.setState.Invoice = OCRBody.body[1];\n    this.setState.Date = OCRBody.body[2];\n  }\n\n  render() {\n    const processing = \"Processing document...\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 offset-3\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-danger\",\n              children: processing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Upload Invoice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormText, {\n              color: \"muted\",\n              children: \"PNG,JPG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group files color\",\n              children: /*#__PURE__*/_jsxDEV(FileBase64, {\n                multiple: true,\n                onDone: this.getFiles.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Invoice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"Invoice\",\n              id: \"Invoice\",\n              required: true,\n              value: this.state.Invoice,\n              onChange: this.handleChane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Amount ($)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"Amount\",\n              id: \"Amount\",\n              required: true,\n              value: this.state.Amount,\n              onChange: this.handleChane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"Date\",\n              id: \"Date\",\n              required: true,\n              value: this.state.Date,\n              onChange: this.handleChane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Vendor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"Vendor\",\n              id: \"Vendor\",\n              required: true,\n              value: this.state.Vendor,\n              onChange: this.handleChane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"Description\",\n              id: \"Description\",\n              required: true,\n              value: this.state.Description,\n              onChange: this.handleChane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-lg btn-block btn-success\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/shivshaurya/Documents/Projects/RealTime-OCR/app/src/Upload.js"],"names":["React","Component","FileBase64","Button","Form","FormGroup","Label","FormText","Input","Upload","state","confirmation","isLoading","files","Invoices","Amount","Date","Vendor","Description","handleChane","event","preventDefault","target","value","name","setState","handleSubmit","getFiles","UID","Math","round","random","date","fileExt","imageID","folder","img","base64","fetch","method","headers","Accept","body","JSON","stringify","targetImage","response","OCRBody","json","console","log","Invoice","render","processing","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FileBase64 from 'react-file-base64';\nimport {Button,Form,FormGroup,Label,FormText,Input} from \"reactstrap\"\n\nimport './upload.css';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faInfoCircle } from '@fortawesome/free-solid-svg-icons'; \n\nclass Upload extends Component {\n    state = {\n        confirmation : \"\",\n        isLoading : \"\",\n        files : \"\",\n        Invoices : \"\",\n        Amount : \"\",\n        Date : \"\",\n        Vendor : \"\",\n        Description : \"\"\n      }\n      \n\n    handleChane(event) {\n        event.preventDefault();\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({name:value});\n    }\n\n    async handleSubmit(event){\n        event.preventDefault();\n        this.setState({confirmation: \"Uploading...\"});\n    }\n\n    async getFiles(files){\n        this.setState({\n            isLoading: \"Extracting data\",\n            files: files\n        });\n\n    const UID = Math.round(1+ Math.random() * (1000000-1));\n    \n    var date={\n        fileExt:\"png\",\n        imageID: UID,\n        folder:UID,\n        img : this.state.files[0].base64\n    };\n\n\n    await fetch('https://8jf7ct3ey4.execute-api.us-east-2.amazonaws.com/Production',\n    {\n        method: \"POST\",\n        headers: {\n            Accept : \"application/json\",\n            \"Content-Type\": \"application.json\"\n        },\n        body : JSON.stringify(date)\n    }\n    );\n\n\n    let targetImage = UID + \".png\";\n\n    const response = await fetch(\n        'https://8jf7ct3ey4.execute-api.us-east-2.amazonaws.com/Production/ocr',\n        {\n        method: \"POST\",\n        headers: {\n            Accept : \"application/json\",\n            \"Content-Type\": \"application.json\"\n        },\n        body : JSON.stringify(targetImage)\n        }\n    );\n\n    const OCRBody = response.json();\n    console.log(\"OCRBody\",OCRBody);\n    this.setState.Amount = OCRBody.body[0];\n    this.setState.Invoice = OCRBody.body[1];\n    this.setState.Date = OCRBody.body[2];\n\n}\n\n    \n    render() {\n        const processing= \"Processing document...\"; \n        return (\n            <div className=\"row\">\n                <div className=\"col-6 offset-3\">\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormGroup>\n                            <h3 className=\"text-danger\">{ processing }</h3>\n                            <h6>Upload Invoice</h6>\n                            <FormText color=\"muted\">PNG,JPG</FormText>\n                        \n\n                        <div className=\"form-group files color\">\n                            <FileBase64 multiple={true}\n                            onDone={this.getFiles.bind(this)}></FileBase64>\n                        </div>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Invoice</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Invoice\"\n                                id=\"Invoice\"\n                                required\n                                value={this.state.Invoice}\n                                onChange = {this.handleChane}\n                                /> \n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Amount ($)</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Amount\"\n                                id=\"Amount\"\n                                required\n                                value={this.state.Amount}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Date</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Date\"\n                                id=\"Date\"\n                                required\n                                value={this.state.Date}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Vendor</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Vendor\"\n                                id=\"Vendor\"\n                                required\n                                value={this.state.Vendor}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Description</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Description\"\n                                id=\"Description\"\n                                required\n                                value={this.state.Description}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n                        <Button className=\"btn btn-lg btn-block btn-success\">\n                            Submit\n                        </Button>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}